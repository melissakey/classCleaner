% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classCleaner.R, R/clean_classes.R
\docType{package}
\name{classCleaner}
\alias{classCleaner}
\title{classCleaner: A package for cleaning outliers when data is grouped.}
\usage{
classCleaner(
  D,
  assignment,
  classes = "all",
  alpha0 = 0.05,
  q = 0.5,
  labels = NULL,
  display_progress = FALSE
)
}
\arguments{
\item{D}{A distance matrix containing the pairwise dissimilarity scores between instances}

\item{assignment}{The assigned group of each instance}

\item{classes}{The subset of classes on which filtering is performed, or "all" if all classes should be analyzed.}

\item{alpha0}{desired overall, FWER-style type I error rate}

\item{labels}{a vector of labels for each instance.  Must be the same length as D.  If NULL, the algorithm will check for rownames and column names in D.  If none are found, the instances will be labeled with numbers 1:nrow(D).}

\item{display_progress}{future progress bar (not used yet)}

\item{tau}{cutoff for F distribution (using F-distribution only)}

\item{beta0}{desired overall FNR-style type II error rate}
}
\description{
Test whether each instance in a class actually belongs.
}
\details{
For each instance in an analyzed class, this function will estimate the probability that it was correctly placed in that class.
}
\examples{
set.seed(23)

X <- simulate_clustered_data(
  n = 200,
  Nk = rep(50, 100),
  s = rep(1, 100),
  rho = .2,
  tau = 1,
  method = "by-class"
)
# true assignment
a <- rep(1:100, each = 50)

# corrupted assignment
b <- sample(100, 50 * 100, replace = TRUE)

# corrupt 10\% of samples
a.corrupt <- ifelse(runif(50 * 1000) < 0.1, b, a)

D <- 1 - cor(X)
result <- identify_outliers(a.corrupt, D, 1000, colnames(D))

}
